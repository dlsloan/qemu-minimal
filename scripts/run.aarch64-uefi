#!/bin/bash
#
# Script to setup a disk image with an OS and UEFI capable bootloader
# on it. Note you need to build UEFI FW for your ARCH [1].
#
# [1] https://wiki.linaro.org/LEG/UEFIforQEMU

# Add these lines in for an install ISO of Bionic Beaver. You will
# need this the first time to get started.
#  -drive if=none,id=installer,file=/home/users/sbates/bluewhale/ubuntu-18.04-server-arm64.iso,format=raw \
#  -device usb-storage,bus=xhci.0,drive=installer\

# You need to create a blank, raw QEMU disk image to place the
# installed OS on. Use something like:
# qemu-img create -f raw <filename> <size>
#
# Note we will resize this on the installed system.

# Note you will need to remove the --enable-kvm line below to run on
# x86 or on a non-kvm enabled ARM64 machine. However this will cause
# things to run very, very slowely.
#   --enable-kvm \
#  -M virt,gic_version=3 \
#  -cpu host \

# Once install is complete (make sure to use grub-efi) you can dd the
# ubuntu-arm64-istalled.img file onto your block device of choice and
# reboot. Good hunting!

INSTALL=${INSTALL:-no}
UEFI=${UEFI:-/home/users/sbates/edk2/Build/ArmVirtQemu-AARCH64/DEBUG_GCC49/FV/QEMU_EFI.fd}
HOST=${HOST:-arm64}
KVM=${KVM:-yes}
DISK=${DISK:-/home/users/sbates/bluewhale/ubuntu-arm64-installed.img}
ISO=${ISO:-/home/users/sbates/bluewhale/ubuntu-18.04-server-arm64.iso}

if [ $INSTALL == "yes" ]; then
    INSTALL_DISK="-drive if=none,id=installer,file=${ISO},format=raw "
    INSTALL_DISK+="-device usb-storage,bus=xhci.0,drive=installer "
fi

CPU="-M virt"
if [ $HOST == "arm64" ]; then
    if [ $KVM == "yes" ]; then
	KVM="  --enable-kvm "
    else
	KVM=
    fi
    CPU+=",gic_version=3   -cpu host "
elif [ $HOST == "amd64" ]; then
    if [ $KVM == "yes" ]; then
	echo "Cannot enable KVM when host is arm64!"
	exit 1
    fi
    KVM=
    CPU+="  -cpu cortex-a57 "
else
    echo "Cannot support host (${HOST})!"
    exit 1
fi

qemu-system-aarch64 \
  ${KVM} \
  -m 1024 \
  ${CPU} \
  -bios ${UEFI} \
  -drive if=none,id=disk,file=${DISK},format=raw \
  -device nec-usb-xhci,id=xhci \
  -device usb-storage,bus=xhci.0,drive=disk \
  ${INSTALL_DISK} \
  -device virtio-net-device,netdev=user0 \
  -netdev user,id=user0 \
  -nographic
